What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository, it creates the ".git" folder within the directory so that git commands may be issued to said directory/repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is the intermediary state between the working directory and the repository. It allows us to select which files we want to commit to the repository from the working directory before the final commit.

How can you use the staging area to make sure you have one commit per logical
change?

	By using the commands "git diff" and "git diff --staged" we can see what changes we have made to the staging area and repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches would be beneficial to use when creating a new experimental feature for your program when wanting to keep a version of the original program that does not implement this feature. This is just an example, but you get the idea.

How do the diagrams help you visualize the branch structure?

	Diagrams give us a visual representation of where branches are created, i.e. at which commit each branch was created.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?